{
	"info": {
		"_postman_id": "47fde2d4-8e31-4d15-afa9-1282ff05dab8",
		"name": "Droid.IO",
		"description": "Microservice to manage droids parts demands.\nOnly authenticated users can access and are able to create, edit, list and delete all his demands.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get token",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4021a9dd-66ef-4950-96c2-5e4750d7108d",
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"test\",\n    \"password\": \"test\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/token/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"token",
						""
					]
				},
				"description": "Get token for further requests"
			},
			"response": []
		},
		{
			"name": "Patch demand",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f0e8d2c3-7eea-4c15-93a4-738bd9a2eeac",
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Token 7fd732e457fff4e5fb4ac381e30df06c086b2d74"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": \"Test patch\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/v1/demands/1/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"demands",
						"1",
						""
					]
				},
				"description": "-- REQUIRES BEARER TOKEN --\nPatch method to update only specific fields and keep other fields with the same value"
			},
			"response": []
		},
		{
			"name": "Create demand",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "89e2638d-b15d-4099-81df-040068476454",
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Token 7fd732e457fff4e5fb4ac381e30df06c086b2d74"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": \"test 2\",\n    \"is_completed\": false,\n    \"delivery_state\": \"sp\",\n    \"delivery_city\": \"rp\",\n    \"delivery_street\": \"asdf\",\n    \"delivery_number\": 12,\n    \"delivery_complement\": \"asdf\",\n    \"delivery_cep\": \"344343\",\n    \"delivery_name\": \"fasdf\",\n    \"cellphone\": \"34234234\",\n    \"email\": \"asdfasd\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/v1/demands/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"demands",
						""
					]
				},
				"description": "-- REQUIRES BEARER TOKEN --\nCreate new demand with all the fields filled"
			},
			"response": []
		},
		{
			"name": "List demands",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "be3284ef-d932-46c4-9c76-1dbd83c79f73",
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8000/api/v1/demands/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"demands",
						""
					]
				},
				"description": "-- REQUIRES BEARER TOKEN --\nList all demands that authenticated user created"
			},
			"response": []
		},
		{
			"name": "Update demand",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "01245009-b8f0-4ca2-828a-78534b649bc1",
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": \"test PUT\",\n    \"is_completed\": false,\n    \"delivery_state\": \"sp\",\n    \"delivery_city\": \"rp\",\n    \"delivery_street\": \"test street\",\n    \"delivery_number\": 12,\n    \"delivery_complement\": \"test\",\n    \"delivery_cep\": \"test\",\n    \"delivery_name\": \"test\",\n    \"cellphone\": \"test\",\n    \"email\": \"test\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/v1/demands/1/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"demands",
						"1",
						""
					]
				},
				"description": "Update all fields of a demand"
			},
			"response": []
		},
		{
			"name": "Delete demand",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a7c13aaa-77b9-4020-aa1e-25b211b0f3af",
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8000/api/v1/demands/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"demands",
						"1"
					]
				},
				"description": "Delete demand from db"
			},
			"response": []
		},
		{
			"name": "Retrieve demand",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7fcbc4e6-8f57-41f3-bd87-c8cae0fd9161",
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8000/api/v1/demands/1/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"demands",
						"1",
						""
					]
				},
				"description": "Retrieve one specific demand"
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwttoken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "f5d76902-aa79-44ae-a89b-22bffb0e149e",
				"type": "text/javascript",
				"exec": [
					"var authServiceUrl = pm.collectionVariables.get('authService');",
					"var baseUrl = pm.collectionVariables.get('baseUrl');",
					"var username = pm.collectionVariables.get('username');",
					"var password = pm.collectionVariables.get('password');",
					"",
					"var sdk = require('postman-collection');",
					"",
					"var isValidTokenRequest = new sdk.Request({",
					"    url: baseUrl + \"/api/v1/demands/\",",
					"    method: 'GET',",
					"    header: [",
					"        new sdk.Header({",
					"            key: 'content-type',",
					"            value: 'application/json',",
					"        }),",
					"        new sdk.Header({",
					"            key: 'acccept',",
					"            value: 'application/json',",
					"        }),",
					"        new sdk.Header({",
					"            key: 'Authorization',",
					"            value: 'Bearer ' + pm.globals.get(\"jwttoken\"),",
					"        }),",
					"    ]",
					"});",
					"",
					"pm.sendRequest(isValidTokenRequest, function (err, response) {",
					"    if (response.code === 401) {",
					"        refreshToken();",
					"    }",
					"});",
					"",
					"function refreshToken() {",
					"    var tokenRequest = new sdk.Request({",
					"    url: authServiceUrl,",
					"    method: 'POST',",
					"    header: [",
					"        new sdk.Header({",
					"            key: 'content-type',",
					"            value: 'application/json'",
					"        }),",
					"        new sdk.Header({",
					"            key: 'acccept',",
					"            value: 'application/json'",
					"        }),",
					"    ],",
					"    body: {",
					"        mode: 'raw',",
					"        raw: JSON.stringify({",
					"            username: username,",
					"            password: password",
					"        })",
					"    } ",
					"  });",
					"",
					"  pm.sendRequest(tokenRequest, function (err, response) {",
					"      if (err) {",
					"          throw err;",
					"      }",
					"      ",
					"      if (response.code !== 200) {",
					"          throw new Error('Could not log in.');",
					"      }",
					"      ",
					"      pm.collectionVariables.set(\"jwttoken\", response.json().access);",
					"      console.log(`New token has been set: ${response.json().access}`);",
					"  });",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "f4340bce-0a95-4dc3-822c-7eebd4037cc0",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "1ffc55af-12c3-4a3a-b775-436b856335b3",
			"key": "authService",
			"value": "http://localhost:8000/api/token/",
			"type": "string"
		},
		{
			"id": "34d6e63d-30ae-487d-876b-b05759e402be",
			"key": "username",
			"value": "test",
			"type": "string"
		},
		{
			"id": "687709c5-be7d-4243-a631-3d1688c98a3b",
			"key": "password",
			"value": "test",
			"type": "string"
		},
		{
			"id": "7421a399-ff86-422d-bfc9-e777688341bc",
			"key": "baseUrl",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"id": "38b4e334-1a5a-4e04-8086-d73caa340485",
			"key": "jwttoken",
			"value": "",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}